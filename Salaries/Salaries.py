# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KPZgATUAJ6jtRtYnHtJ05-7-5nbc6xat
"""

import requests
from bs4 import BeautifulSoup

def parse_salaries_call_center():
    url = 'https://layboard.com/vakansii/cernogoria/speciality-operator-call-centra'

    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    salary_elements = soup.find_all('span', class_='salary')

    salaries = []
    for el in salary_elements:
        salary_text = el.get_text(strip=True)
        salaries.append(salary_text)

    return salaries

print(parse_salaries_call_center())

def double_parse_salaries_call_center():
    url = 'https://layboard.com/vakansii/cernogoria/speciality-operator-call-centra?page=2'

    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    salary_elements = soup.find_all('span', class_='salary')

    salaries = []
    for el in salary_elements:
        salary_text = el.get_text(strip=True)
        salaries.append(salary_text)

    return salaries

print(double_parse_salaries_call_center())

list_1 = parse_salaries_call_center()
list_2 = double_parse_salaries_call_center()
salaries = list_1 + list_2
cleaned_salaries_call_center = []
for item in salaries:
    numbers = ''.join(filter(str.isdigit, item))
    cleaned_salaries_call_center.append(int(numbers))

print(cleaned_salaries_call_center)

print(min(cleaned_salaries_call_center))
print(max(cleaned_salaries_call_center))
average_call_center = sum(cleaned_salaries_call_center) / len(cleaned_salaries_call_center)
print(average_call_center)

def parse_salaries_marketing():
    url = 'https://layboard.com/vakansii/cernogoria/marketing-reklama-pr'

    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    salary_elements = soup.find_all('span', class_='salary')

    salaries = []
    for elem in salary_elements:
        salary_text = elem.get_text(strip=True)
        salaries.append(salary_text)

    return salaries

print(parse_salaries_marketing())
salaries_marleting = parse_salaries_marketing()

cleaned_salaries_marketing = []
for item in salaries_marleting:
    numbers = ''.join(filter(str.isdigit, item))
    cleaned_salaries_marketing.append(int(numbers))

print(cleaned_salaries_marketing)

print(min(cleaned_salaries_marketing))
print(max(cleaned_salaries_marketing))
average_marketing = sum(cleaned_salaries_marketing) / len(cleaned_salaries_marketing)
print(average_marketing)

def parse_salaries_managers():
    url = 'https://layboard.com/vakansii/cernogoria/speciality-menedzer-po-prodazam'

    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    salary_elements = soup.find_all('span', class_='salary')

    salaries = []
    for elem in salary_elements:
        salary_text = elem.get_text(strip=True)
        salaries.append(salary_text)

    return salaries

print(parse_salaries_managers())
salaries_managers = parse_salaries_managers()

cleaned_salaries_managers = []
for item in salaries_managers:
    numbers = ''.join(filter(str.isdigit, item))
    cleaned_salaries_managers.append(int(numbers))

print(cleaned_salaries_managers)

print(min(cleaned_salaries_managers))
print(max(cleaned_salaries_managers))
average_managers = sum(cleaned_salaries_managers) / len(cleaned_salaries_managers)
print(average_managers)
final_manager = average_managers + 900
print(final_manager)

def parse_salaries_HR():
    url = 'https://layboard.com/vakansii/cernogoria/hr-i-rekruting'

    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    salary_elements = soup.find_all('span', class_='salary')

    salaries = []
    for elem in salary_elements:
        salary_text = elem.get_text(strip=True)
        salaries.append(salary_text)

    return salaries

print(parse_salaries_HR())
salaries_HR = parse_salaries_HR()

cleaned_salaries_HR = []
for item in salaries_HR:
    cleaned = ''.join([c for c in item if c.isdigit() or c == '-'])
    parts = cleaned.split('-')
    if len(parts) == 2:
        cleaned_salaries_HR.append(int(parts[0]))
        cleaned_salaries_HR.append(int(parts[1]))
    else:
        cleaned_salaries_HR.append(int(parts[0]))

print(cleaned_salaries_HR)

print(min(cleaned_salaries_HR))
print(max(cleaned_salaries_HR))
average_HR = sum(cleaned_salaries_HR) / len(cleaned_salaries_HR)
print(average_HR)

def parse_salaries_IT():
    url = 'https://layboard.com/vakansii/cernogoria/it-sfera'

    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    salary_elements = soup.find_all('span', class_='salary')

    salaries = []
    for elem in salary_elements:
        salary_text = elem.get_text(strip=True)
        salaries.append(salary_text)

    return salaries

print(parse_salaries_IT())
salaries_IT = parse_salaries_IT()

cleaned_salaries_IT = []
for item in salaries_IT:
    cleaned = ''.join([c for c in item if c.isdigit() or c == '-'])
    parts = cleaned.split('-')
    if len(parts) == 2:
        cleaned_salaries_IT.append(int(parts[0]))
        cleaned_salaries_IT.append(int(parts[1]))
    else:
        cleaned_salaries_IT.append(int(parts[0]))

print(cleaned_salaries_IT)

print(min(cleaned_salaries_IT))
print(max(cleaned_salaries_IT))
average_IT = sum(cleaned_salaries_IT) / len(cleaned_salaries_IT)
print(average_IT)

import matplotlib.pyplot as plt

average_salaries = [average_call_center, average_marketing, final_manager, average_HR, average_IT]
sectors = ['Колл-центр', 'Маркетинг', 'Менеджмент', 'HR и рекрутинг', 'Программист']
plt.figure(figsize=(8, 5))
colors = ['blue', 'green', 'orange', 'purple', 'yellow']
bars = plt.bar(sectors, average_salaries, color=colors)
plt.title('Средние зарплаты по должностям')
plt.xlabel('Должности')
plt.ylabel('Средняя зарплата (€)')
plt.show()